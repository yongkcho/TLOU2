install.packages("RSelenium")
library(RSelenium)
library(dplyr)
install.packages("dplyr")
# https://rpubs.com/grahamplace/rseleniumonmac
browser <- remoteDriver(port = 5556)
browser$open()
# set working dir
wkdir <- "/Users/wang/TLOU2"
setwd(wkdir)
list.files(wkdir)
# import library
library(dplyr)
library(stringr)
library(ggplot2)
library(igraph)
library(tm)
library(tidytext)
library(tidyverse)
library(topicmodels)
library(lda)
library(Rmpfr)
library(LDAvis)
library(wordcloud)
# import dataset
user_data <- read.csv("all_user_data.csv")
review_data <- read.csv("TLOU_review_200624.csv", encoding ="utf-8")
# define functions
'%!in%' <- function(x, y)!('%in%'(x, y))
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
neg_corpus <- Corpus(VectorSource(neg_review$review))
neg_corpus <- tm_map(neg_corpus, removePunctuation)
neg_corpus <- tm_map(neg_corpus, removeNumbers)
neg_corpus <- tm_map(neg_corpus, tolower)
review_data <- read.csv("TLOU_review_200624_processed.csv", encoding ="utf-8")
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
review_data <- review_data[review_data$lang == "eng",]
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
pos_corpus <- Corpus(VectorSource(pos_review$review))
pos_corpus <- tm_map(pos_corpus, removePunctuation)
pos_corpus <- tm_map(pos_corpus, removeNumbers)
pos_corpus <- tm_map(pos_corpus, tolower)
review_data <- read.csv("TLOU_review_200624_processed.csv", encoding ="utf-8")
review_data <- review_data[review_data$lang == "eng",]
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
pos_corpus <- Corpus(VectorSource(pos_review$review))
pos_corpus <- tm_map(pos_corpus, removePunctuation)
pos_corpus <- tm_map(pos_corpus, removeNumbers)
pos_corpus <- tm_map(pos_corpus, tolower)
pos_corpus <- tm_map(pos_corpus, tolower)
View(pos_review)
pos_review$review[5]
encoding(pos_review$review[5])
Encoding(pos_review$review[5])
x <- pos_review$review[5]
Encoding(x)
Encoding(x) <- "utf-8"
review_data$review <- as.character(review_data$review)
review_data <- review_data[review_data$lang == "eng",]
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
pos_corpus <- Corpus(VectorSource(pos_review$review))
pos_corpus <- tm_map(pos_corpus, removePunctuation)
pos_corpus <- tm_map(pos_corpus, removeNumbers)
pos_corpus <- tm_map(pos_corpus, tolower)
levels(review_data$review[5]) <- iconv(levels(review_data$review[5]),
from = "German", to = "utf-8")
Encoding(pos_review$review[5])
x <- pos_review$review[5]
x
Encoding(x)
Encoding(x) <- "utf-8"
Encoding(x)
x
xx <- iconv(x, "unkown", "utf-8", sub = "")
xx <- iconv(x, "unknown", "utf-8", sub = "")
library(stringi)
stri_encode(x, "", "utf-8")
x <- stri_encode(x, "", "utf-8")
x
Encoding(x)
tolower(x)
review_data$review <- stri_encode(review_data$review)
review_data$review <- stri_encode(review_data$review, "", "utf-8")
neg_review <- review_data[review_data$score < 3.727,] #lower than mean
pos_review <- review_data[review_data$score >= 3.727,] #higher than mean
pos_corpus <- Corpus(VectorSource(pos_review$review))
pos_corpus <- tm_map(pos_corpus, removePunctuation)
pos_corpus <- tm_map(pos_corpus, removeNumbers)
pos_corpus <- tm_map(pos_corpus, tolower)
pos_tdm <- TermDocumentMatrix(pos_corpus, control=list(wordLengths=c(4,Inf)))
pos_tdm <- as.data.frame(as.matrix(pos_tdm))
pis_words <- sort(rowSums(pos_tdm), decreasing=TRUE)
pos_words <- pis_words
rm(pis_words)
save.image("~/TLOU2/analysis.RData")
pos_words <- data.frame(word = names(pos_words), freq = pos_words)
View(pos_words)
pos_corpus <- tm_map(pos_corpus, str_replace_all(temp,"[^a-zA-Z\\s]", " "))
pos_corpus <- tm_map(pos_corpus, str_replace_all("[^a-zA-Z\\s]", " "))
pos_corpus <- tm_map(pos_corpus, content_transformer(str_replace_all("[^a-zA-Z\\s]", " ")))
pos_corpus <- tm_map(pos_corpus, removeWords, stopwords("english"))
pos_corpus <- tm_map(pos_corpus, stemDocument)
pos_corpus <- tm_map(pos_corpus, stripWhitespace)
pos_corpus <- tm_map(pos_corpus, PlainTextDocument)
inspect(pos_corpus[1])
pos_tdm <- TermDocumentMatrix(pos_corpus, control=list(wordLengths=c(4,Inf)))
pos_corpus <- Corpus(VectorSource(pos_review$review))
pos_corpus <- tm_map(pos_corpus, removePunctuation)
pos_corpus <- tm_map(pos_corpus, removeNumbers)
pos_corpus <- tm_map(pos_corpus, tolower)
pos_corpus <- tm_map(pos_corpus, removeWords, stopwords("english"))
pos_corpus <- tm_map(pos_corpus, stemDocument)
pos_corpus <- tm_map(pos_corpus, stripWhitespace)
pos_tdm <- TermDocumentMatrix(pos_corpus, control=list(wordLengths=c(4,Inf)))
pos_tdm <- as.data.frame(as.matrix(pos_tdm))
pos_words <- sort(rowSums(pos_tdm), decreasing=TRUE)
pos_words <- data.frame(word = names(pos_words), freq = pos_words)
View(pos_words)
pos_tfIdf <- TermDocumentMatrix(pos_words,
control=list(wordLengths=c(4,30), weighting=weightTfIdf))
pos_tfIdf <- TermDocumentMatrix(pos_corpus,
control=list(wordLengths=c(4,30), weighting=weightTfIdf))
tfIdf_df <- as.data.frame(as.matrix(tfIdf))
pos_tfIdf_df <- as.data.frame(as.matrix(pos_tfIdf))
tfIdfResult <- sort(rowSums(tfIdf_df), decreasing=TRUE)
tfIdfResult <- sort(rowSums(pos_tfIdf_df), decreasing=TRUE)
pos_tfIdfResult <- tfIdfResult
save.image("~/TLOU2/analysis_2.RData")
