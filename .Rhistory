review_data$user_url <- review_data$user_url %>% as.character()
#user_bak <- all_user
new_data <- review_data[review_data$user %!in% user_data$user,]
new_user <- NULL
error_chk <- "Error 503 Service Unavailable"
for(i in 1:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3.5)
}
remDr$open()
for(i in 1:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3.5)
}
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
is_delete
delete_chk <- "User not found"
delete_user <- c()
delete_user <- c()
for(i in 1:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3.5)
}
for(i in 1:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3.5)
}
i
for(i in 3:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(1)
}
i
for(i in 7:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3)
}
i
for(i in 166:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3.5)
}
i
Sys.sleep(5)
for(i in 172:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(5)
}
i
for(i in 173:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(1)
remDr$close()
remDr$open()
}
remDr$open()
for(i in 173:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(1)
remDr$close()
remDr$open()
}
i
remDr$refresh()
for(i in 186:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3)
if(i %% 5 == 0){
Sys.sleep(10)
}
}
i
for(i in 277:length(new_data$user_url)){
remDr$navigate(new_data$user_url[i])
temp <- remDr$getPageSource()[[1]] %>% read_html()
is_error <- temp %>% html_nodes("body > h1") %>% html_text()
if(length(is_error) == 0){is_error <- ""}
if(is_error == error_chk){
remDr$refresh()
}
is_delete <- temp %>% html_nodes(".name") %>% html_text()
if(length(is_delete) == 0){is_delete <- ""}
if(is_delete == delete_chk){
delete_user <- c(delete_user, new_data$user)
next
}
rating_num <- temp %>% html_nodes(".total_summary_ratings.mr20") %>% html_nodes(".data") %>% html_text() %>% as.integer()
review_num <- temp %>% html_nodes(".total_summary_reviews") %>% html_nodes(".data") %>% html_text() %>% as.integer()
dist <- temp %>% html_nodes(".count_wrap") %>% html_nodes(".count") %>% html_text() %>% as.integer()
pos_dist <- dist[1]
mixed_dist <- dist[2]
neg_dist <- dist[3]
avg_score <- temp %>% html_nodes(".summary_data") %>% html_text() %>% str_remove_all("\n") %>%
str_remove_all("\t") %>% trimws()
if(length(dist) == 0){ #review is deleted
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = 0, mixed_dist = 0, neg_dist = 0, avg_score = "0.0")
} else { #normal case
temp_df <- data.frame(user = all_df$user[i], user_url = all_df$user_url[i], rating_num = rating_num, review_num = review_num,
pos_dist = pos_dist, mixed_dist = mixed_dist, neg_dist = neg_dist, avg_score = avg_score)
}
new_user <- rbind(new_user, temp_df)
if(i %% 100 == 0){message(round(i / length(all_df$user_url), digits = 4) * 100, " % is done.")}
Sys.sleep(3)
if(i %% 5 == 0){
Sys.sleep(10)
}
}
save.image("C:/Users/user/TLOU2/user_crawl_200627.RData")
temp
load("C:/Users/user/TLOU2/chkPoint_200624.RData")
source('C:/Users/user/TLOU2/metacritic_analysis.R', echo=TRUE)
wkdir <- "C:/Users/user/TLOU2"
source('C:/Users/user/TLOU2/metacritic_analysis.R', echo=TRUE)
library(qgraph)
install.packages("ggthemes")
source('C:/Users/user/TLOU2/metacritic_analysis.R', echo=TRUE)
# network analysis
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
neg_tfIdfResult <- sort(rowSums(neg_tfIdf_df), decreasing=TRUE)
# network analysis
memory.limit(size = 50000)
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
# network analysis
memory.limit(size = 500000)
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
# network analysis
memory.size()
memory.limit(size = 56000)
# network analysis
memory.size()
memory.limit(size = 56000)
memory.size(max = FALSE)
memory.limit(size = 56000)
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
memory.size(max = FALSE)
memory.limit(size = 56000)
memory.size(max = TRUE)
memory.limit(size = 56000)
View(neg_tfIdf)
memory.limit()
# network analysis
memory.limit()
memory.size(size = 5e+05)
memory.size(size = 50000)
neg_tfIdfResult <- sort(rowSums(neg_tfIdf_df), decreasing=TRUE)
neg_tfIdf
neg_corpus
# network analysis
memory.size(max = TRUE)
memory.size(max = FALSE)
memory.limit(size = NA)    # 컴퓨터의 최대 메모리 한계치
memory.limit(size = 50000)
memory.limit(size = 50000)
memory.limit(size = 500000)
memory.limit(size = 500000)
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
neg_tfIdfResult <- sort(rowSums(neg_tfIdf_df), decreasing=TRUE)
memory.limit(size = 5000000)
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
memory.limit(size = 50000000)
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
memory.limit(size = 50000000000)
neg_tfIdf <- TermDocumentMatrix(neg_corpus,
control = list(wordLengths = c(3,30), weighting = weightTfIdf))
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
memory.limit(size = 500000000000000000000000000)
memory.limit(size = 5000000000000000000000000)
memory.limit(size = 500000000000000000000)
memory.limit(size = 5000000000000000000)
memory.limit(size = 50000000000000000)
memory.limit(size = 5000000000000000)
memory.limit(size = 500000000000000)
memory.limit(size = 50000000000000)
memory.limit(size = 5000000000000)
neg_tfIdf_df <- as.data.frame(as.matrix(neg_tfIdf))
library(slam)
Encoding(neg_tfIdf$dimnames$Terms) = 'UTF-8'
neg_tfIdfResult <- as.data.frame(row_sums(neg_tfIdf, na.rm=T))
View(neg_tfIdfResult)
install.packages("openNLP")
library(openNLP)
library(openNLPmodels.en)
install.packages("openNLPmodels.en")
install.packages("openNLPmodels.en")
library(openNLPmodels.en)
View(neg_tfIdfResult)
rownames(neg_tfIdfResult)[1:100]
neg_tfIdfResult <- data.frame(names = rownames(neg_tfIdfResult), tfIdf = neg_tfIdfResult$`row_sums(neg_tfIdf, na.rm = T)`)
View(neg_tfIdfResult)
